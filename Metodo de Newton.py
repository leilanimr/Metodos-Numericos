{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Metodo de Newton.ipynb","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"hA3oW2o-GK8X","colab_type":"code","outputId":"fce6d7ef-f7dd-4d36-e776-12ba8a920b5f","executionInfo":{"status":"ok","timestamp":1575381210260,"user_tz":360,"elapsed":1180,"user":{"displayName":"Leilan Itzel Marmolejo Robles","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCBH1GH_SWHdXmZKtFDJGZySQUogDpsx3BtkSU_=s64","userId":"11610260014596398308"}},"colab":{"base_uri":"https://localhost:8080/","height":238}},"source":["import numpy as np\n"," \n","def newton_raphson(f, x_guess=None, max_num_iter= 12, tolerance=0.001, alpha=1.0, print_info=True ):\n","    if x_guess is None:\n","        x_guess = np.random.rand(f.numDims())\n","    x = x_guess\n"," \n","    fx = f(x)\n"," \n","    err = np.linalg.norm(fx)\n","    iter = 0\n"," \n","    if print_info:\n","        print(\"Iteration {0}: Error of {1} with an estimate of {2}\".format(iter,err,x))\n"," \n","    while iter < max_num_iter:\n"," \n","        x = x - alpha*np.linalg.solve(f.getJacobian(x),fx)\n"," \n","        fx = f(x)\n"," \n","        err = np.linalg.norm(fx)\n"," \n","        iter = iter + 1\n"," \n","        if print_info:\n","            print(\"Iteration {0}: Error of {1} with an estimate of {2}\".format(iter, err, x))\n"," \n","    return (x, err, iter)\n","\n","class HuggingEllipses:\n","    def __init__(self):\n","        self.name = \"HuggingEllipses\"\n"," \n","    def numDims(self):\n","        return 2\n"," \n","    def getJacobian(self,x):\n","        return np.array( [[2*(x[0]), -2*x[1] +2],[2, 2*x[1]]] )\n"," \n","    def __call__(self, x):\n","        f = np.zeros((2,))\n","        f[0] = x[0]**2 - x[1]**2 +2*x[1]\n","        f[1] = (2*x[0]) + x[1]**2 - 6\n","        return f\n"," \n"," \n","\n","f = HuggingEllipses()\n","xn = newton_raphson(f,tolerance=0.001)\n"," \n"," "],"execution_count":1,"outputs":[{"output_type":"stream","text":["Iteration 0: Error of 4.72395478719576 with an estimate of [0.54472177 0.56394839]\n","Iteration 1: Error of 216.60434175982087 with an estimate of [ 10.73678264 -13.436981  ]\n","Iteration 2: Error of 53.029108257395066 with an estimate of [ 5.72177104 -6.51593227]\n","Iteration 3: Error of 12.226876370119017 with an estimate of [ 3.35809434 -3.2030094 ]\n","Iteration 4: Error of 2.2593135542224996 with an estimate of [ 2.39310557 -1.79098102]\n","Iteration 5: Error of 0.19866551445656408 with an estimate of [ 2.13440852 -1.37879629]\n","Iteration 6: Error of 0.002317344327283815 with an estimate of [ 2.1097763  -1.33505095]\n","Iteration 7: Error of 3.3473518710638215e-07 with an estimate of [ 2.10951195 -1.33453226]\n","Iteration 8: Error of 6.6018607235733855e-15 with an estimate of [ 2.10951192 -1.33453219]\n","Iteration 9: Error of 4.440892098500626e-16 with an estimate of [ 2.10951192 -1.33453219]\n","Iteration 10: Error of 4.440892098500626e-16 with an estimate of [ 2.10951192 -1.33453219]\n","Iteration 11: Error of 4.440892098500626e-16 with an estimate of [ 2.10951192 -1.33453219]\n","Iteration 12: Error of 4.440892098500626e-16 with an estimate of [ 2.10951192 -1.33453219]\n"],"name":"stdout"}]}]}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Romberg bien.ipynb","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"P9M2wxDc3BLn","colab_type":"code","outputId":"dfc10f65-db51-40ae-82e0-f68534bfbf78","executionInfo":{"status":"ok","timestamp":1574344112892,"user_tz":360,"elapsed":421,"user":{"displayName":"Leilan Itzel Marmolejo Robles","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCBH1GH_SWHdXmZKtFDJGZySQUogDpsx3BtkSU_=s64","userId":"11610260014596398308"}},"colab":{"base_uri":"https://localhost:8080/","height":578}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","def f1(x):\n","   f1 = np.e**(x) -2*x**(2) + 3*x -1\n","   return f1;\n","\n","def trapecio(f,a,b,N):\n","    h   = (b-a)/N\n","    xi  = np.linspace(a,b,N+1)\n","    fi  = f(xi)\n","    s   = 0.0\n","    for i in range(1,N):\n","        s = s + fi[i]\n","    s = (h/2)*(fi[0] + fi[N]) + h*s\n","    return s\n","\n","def romberg(f,a,b,eps,nmax):\n","\n","    Q= np.zeros((nmax,nmax),float)\n","    for i in range(0,nmax):\n","        N      = 2**i\n","        Q[i,0] = trapecio(f,a,b,N)\n","        for k in range(0,i):\n","            n        = k + 2\n","            Q[i,k+1] = 1.0/(4**(n-1)-1)*(4**(n-1)*Q[i,k] - Q[i-1,k]) \n","            print (Q)\n","        if (i > 0):\n","            if (abs(Q[i,k+1] - Q[i,k]) < eps): #error\n","              break  \n","    print (\"\\n\\nEl resultado es: \", Q[i,k+1])\n","    print(\"Error: \",abs(Q[i,k+1] - Q[i,k]),'\\n')\n","    return Q\n","\n","a  = 0\n","b = 1\n","romberg(f1,a,b,1.0e-12,4)\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [0.         0.         0.         0.        ]\n"," [0.         0.         0.         0.        ]]\n","[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [1.5397219  1.55165218 0.         0.        ]\n"," [0.         0.         0.         0.        ]]\n","[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [1.5397219  1.55165218 1.55161602 0.        ]\n"," [0.         0.         0.         0.        ]]\n","[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [1.5397219  1.55165218 1.55161602 0.        ]\n"," [1.54864359 1.55161749 0.         0.        ]]\n","[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [1.5397219  1.55165218 1.55161602 0.        ]\n"," [1.54864359 1.55161749 1.55161518 0.        ]]\n","[[1.35914091 0.         0.         0.        ]\n"," [1.50393109 1.55219449 0.         0.        ]\n"," [1.5397219  1.55165218 1.55161602 0.        ]\n"," [1.54864359 1.55161749 1.55161518 1.55161516]]\n","\n","\n","El resultado es:  1.5516151621278638\n","Error:  1.3423909761556274e-08 \n","\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([[1.35914091, 0.        , 0.        , 0.        ],\n","       [1.50393109, 1.55219449, 0.        , 0.        ],\n","       [1.5397219 , 1.55165218, 1.55161602, 0.        ],\n","       [1.54864359, 1.55161749, 1.55161518, 1.55161516]])"]},"metadata":{"tags":[]},"execution_count":2}]}]}
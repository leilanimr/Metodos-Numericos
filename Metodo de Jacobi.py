{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Metodo de Jacobi.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python2","display_name":"Python 2"}},"cells":[{"cell_type":"code","metadata":{"id":"AtWg57096hN3","colab_type":"code","outputId":"4fbf3ff3-9d07-4e0c-e770-fd5ad14a59d2","executionInfo":{"status":"ok","timestamp":1570539044849,"user_tz":300,"elapsed":441,"user":{"displayName":"Leilan Itzel Marmolejo Robles","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCBH1GH_SWHdXmZKtFDJGZySQUogDpsx3BtkSU_=s64","userId":"11610260014596398308"}},"colab":{"base_uri":"https://localhost:8080/","height":187}},"source":["from pprint import pprint\n","from numpy import array, zeros, diag, diagflat, dot\n","\n","def jacobi(A,b,iteraciones,x=None):\n","                                                                                                                                                        \n","    if x is None:\n","        x = zeros(len(A[0]))\n","\n","    # Diagonal                                                                                                                                                                                                                                                                                                                  \n","    T = diag(A)\n","    R = A - diagflat(T)\n","\n","    # Iteraciones                                                                                                                                                                    \n","    for i in range(iteraciones):\n","        x = (b - dot(R,x)) / T\n","        print x\n","    return x\n","\n","A = array([[5,-2,1],[-1,-7,3],[2.0,-1,8]])\n","b = array([3,-2,1])\n","c = array([0,0,0])\n","\n","sol = jacobi(A,b,iteraciones=8,x=c)\n","\n","print \"solucion:\"\n","pprint(sol)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["[0.6        0.28571429 0.125     ]\n","[0.68928571 0.25357143 0.01071429]\n","[ 0.69928571  0.19183673 -0.015625  ]\n","[ 0.67985969  0.1791199  -0.02584184]\n","[ 0.67681633  0.1775164  -0.02257494]\n","[ 0.67552155  0.17935127 -0.02201453]\n","[ 0.67614341  0.17977641 -0.02146148]\n","[ 0.67620286  0.17992459 -0.0215638 ]\n","solucion:\n","array([ 0.67620286,  0.17992459, -0.0215638 ])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"E5ei6bPl75HV","colab_type":"code","outputId":"3cb2ffee-ba8e-4f55-9fb6-8c5b876318b7","executionInfo":{"status":"ok","timestamp":1568770124472,"user_tz":300,"elapsed":604,"user":{"displayName":"Leilan Itzel Marmolejo Robles","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mCBH1GH_SWHdXmZKtFDJGZySQUogDpsx3BtkSU_=s64","userId":"11610260014596398308"}},"colab":{"base_uri":"https://localhost:8080/","height":598}},"source":["from pprint import pprint\n","from numpy import array, zeros, diag, diagflat, dot\n","\n","def jacobi(A,b,N=25,x=None):\n","    \"\"\"Solves the equation Ax=b via the Jacobi iterative method.\"\"\"\n","    # Create an initial guess if needed                                                                                                                                                            \n","    if x is None:\n","        x = zeros(len(A[0]))\n","\n","    # Create a vector of the diagonal elements of A                                                                                                                                                \n","    # and subtract them from A                                                                                                                                                                     \n","    D = diag(A)\n","    R = A - diagflat(D)\n","\n","    # Iterate for N times                                                                                                                                                                          \n","    for i in range(N):\n","        x = (b - dot(R,x)) / D\n","        print x\n","    return x\n","\n","A = array([[9.0,3.0,4.0],[3.0,10.0,5.0],[4.0,5.0,11.0]])\n","b = array([2.0,4.0,6.0])\n","guess = array([1.0,1.0,1.0])\n","\n","sol = jacobi(A,b,N=25,x=guess)\n","\n","print \"A:\"\n","pprint(A)\n","\n","print \"b:\"\n","pprint(b)\n","\n","print \"x:\"\n","pprint(sol)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[-0.55555556 -0.4        -0.27272727]\n","[0.47676768 0.7030303  0.92929293]\n","[-0.42514029 -0.20767677  0.05252525]\n","[0.26810325 0.50127946 0.79444955]\n","[-0.29795962 -0.07765575  0.22010815]\n","[0.15028163 0.37933381 0.68910157]\n","[-0.21048974  0.01036473  0.31838222]\n","[0.0772641  0.30395581 0.61728503]\n","[-0.15344528  0.06817825  0.37919678]\n","[0.03096424 0.2564352  0.57026271]\n","[-0.11670627  0.10557937  0.41763337]\n","[0.00141427 0.2261952  0.53990257]\n","[-0.09313287  0.12962444  0.44212427]\n","[-0.0174856   0.20687773  0.52040085]\n","[-0.07802629  0.14504526  0.45777761]\n","[-0.02958291  0.19451908  0.50789808]\n","[-0.06834995  0.15492583  0.46779421]\n","[-0.03732826  0.18660788  0.49988824]\n","[-0.06215296  0.16125436  0.47420669]\n","[-0.04228776  0.18154254  0.49475818]\n","[-0.05818448  0.16530724  0.47831258]\n","[-0.04546356  0.17829906  0.49147289]\n","[-0.05564319  0.16790262  0.48094172]\n","[-0.0474972   0.1762221   0.48936906]\n","[-0.05401584  0.16956463  0.4826253 ]\n","A:\n","array([[ 9.,  3.,  4.],\n","       [ 3., 10.,  5.],\n","       [ 4.,  5., 11.]])\n","b:\n","array([2., 4., 6.])\n","x:\n","array([-0.05401584,  0.16956463,  0.4826253 ])\n"],"name":"stdout"}]}]}